<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>пост | Academic</title>
    <link>https://example.com/tag/%D0%BF%D0%BE%D1%81%D1%82/</link>
      <atom:link href="https://example.com/tag/%D0%BF%D0%BE%D1%81%D1%82/index.xml" rel="self" type="application/rss+xml" />
    <description>пост</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 13 May 2022 14:30:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>пост</title>
      <link>https://example.com/tag/%D0%BF%D0%BE%D1%81%D1%82/</link>
    </image>
    
    <item>
      <title>9-13 мая, 2022 г.</title>
      <link>https://example.com/post/9-13-%D0%BC%D0%B0%D1%8F-2022-%D0%B3/</link>
      <pubDate>Fri, 13 May 2022 14:30:00 +0000</pubDate>
      <guid>https://example.com/post/9-13-%D0%BC%D0%B0%D1%8F-2022-%D0%B3/</guid>
      <description>&lt;h2 id=&#34;обзор&#34;&gt;Обзор&lt;/h2&gt;
&lt;p&gt;9 мая я отмечала День Победы. В связи с этим праздником и 10 мая тоже было выходным днем. С 11 мая началась обычная учебная неделя.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Язык разметки Markdown</title>
      <link>https://example.com/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown/</link>
      <pubDate>Fri, 13 May 2022 14:30:00 +0000</pubDate>
      <guid>https://example.com/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown/</guid>
      <description>&lt;h2 id=&#34;основная-информация&#34;&gt;Основная информация&lt;/h2&gt;
&lt;p&gt;Markdown — удобочитаемый язык разметки, который прозрачно конвертируется в HTML. Его можно открывать и изменять в любом редакторе текста. Широко используется для написания документаций и README-файлов. Вы можете встретить Markdown в .md или .markdown файлах. Несмотря на то, что Markdown достаточно удобно читать в исходном виде, его часто переводят в HTML.&lt;/p&gt;
&lt;h2 id=&#34;использование-языка-разметки-markdown&#34;&gt;Использование языка разметки Markdown&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Параграф это одна или несколько подряд идущих строчек текста, отделённых одной или несколькими пустыми строчками. Если строка содержит только пробелы или табы, то она всё равно считается пустой. Подряд идущие строчки будут склеены в одну, если не добавить жёсткий перенос. Существует несколько способов как это можно сделать: добавить два (или больше) пробелов в конце строки &amp;lt;пробел&amp;gt;&amp;lt;пробел&amp;gt;, добавить обратную косую черту в конце строки , добавить HTML тег переноса строки &lt;br&gt;;&lt;/li&gt;
&lt;li&gt;Чтобы создать заголовок, используйте знак #;&lt;/li&gt;
&lt;li&gt;Чтобы задать для текста полужирное начертание, заключите его в двойные звездочки, курсивное - одинарные, полужирное и курсивное - тройные;&lt;/li&gt;
&lt;li&gt;Блоки цитирования создаются с помощью символа &amp;gt;;&lt;/li&gt;
&lt;li&gt;Неупорядоченный список создается с помощью тире или звездочек, а нумерованный - с помощью цифр. Для вложенных списков используются отступы;&lt;/li&gt;
&lt;li&gt;Синтаксис Markdown для встроенной ссылки состоит из части [link text] , представляющей текст гиперссылки, и части (file-name.md) – URL-адреса или имени файла, на который дается ссылка;&lt;/li&gt;
&lt;li&gt;Markdown поддерживает как встраивание фрагментов кода в предложение, так и их размещение между предложениями в виде отдельных огражденных блоков. Огражденные блоки кода — это простой способ выделить синтаксис для фрагментов кода.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git</title>
      <link>https://example.com/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8.-git/</link>
      <pubDate>Fri, 06 May 2022 22:30:00 +0000</pubDate>
      <guid>https://example.com/post/%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8F%D0%BC%D0%B8.-git/</guid>
      <description>&lt;h2 id=&#34;системы-контроля-версий&#34;&gt;Системы контроля версий&lt;/h2&gt;
&lt;p&gt;Системы контроля версий – это программное обеспечение для облегчения работы над изменяющейся информацией, которое часто применяют при работе нескольких человек над одним проектом. Они позволяют фиксировать изменения в файлах и кто их внес, отслеживать и разрешать возникающие конфликты: производить откат, совмещать изменения, сделанные разными участниками, заблокировать файлы для изменения и вручную выбрать версию файлов. Также они могут иметь и дополнительные функции, например, поддержка работы с несколькими версиями путем сохранения общей истории изменений до точки ветвления и собственные истории каждой ветви.
Обычно основное дерево проекта хранится в локальном или удаленном репозитории, к которому настроен доступ для участников проекта. В классических системах используется централизованная модель, т.е. файлы хранятся в едином репозитории. Большинство функций по управлению версиями выполняется специальным сервером. Пользователь перед началом работы с помощью команд получает нужную версию файлов. После внесения изменений он размещает новую версию в хранилище. При этом предыдущие версии удалять не будут, к ним можно вернуться в любой момент. Сервер также может сохранять не полную версию измененных файлов, а производить дельта-компрессию, т.е. сохранять только изменения между последовательными версиями, уменьшая объем хранимых данных. В распределенных системах центральный репозиторий не является обязательным.&lt;/p&gt;
&lt;h2 id=&#34;задачи-решаемые-vcs&#34;&gt;Задачи, решаемые VCS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Обеспечение командной и распределенной работы над проектом без специального инструментария, предоставление возможности изменять файлы, не мешая работе других пользователей;&lt;/li&gt;
&lt;li&gt;Сохранение исходного кода, хранение всех предыдущих версий или, для уменьшения объема, изменений между последовательными версиями;&lt;/li&gt;
&lt;li&gt;Ведение журнала изменений: кто из участников, когда и какие изменения внес, причем доступ к нему можно ограничить;&lt;/li&gt;
&lt;li&gt;Отслеживание и разрешение конфликтов, возникающих при работе нескольких человек над одним проектом;&lt;/li&gt;
&lt;li&gt;Автоматическое или ручное объединение (совмещение) изменений;&lt;/li&gt;
&lt;li&gt;Ручной выбор нужной версии;&lt;/li&gt;
&lt;li&gt;Откат изменений;&lt;/li&gt;
&lt;li&gt;Настраиваемая блокировка файлов для изменения, предоставление привилегированного доступа только одному пользователю, работающему с файлом;&lt;/li&gt;
&lt;li&gt;Поддержка работы с несколькими версиями одного файла, сохранение общей истории изменений до точки ветвления версий и собственные изменения каждой ветви.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;основные-команды-git&#34;&gt;Основные команды git&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Создание основного дерева репозитория – git init;&lt;/li&gt;
&lt;li&gt;Получение обновлений текущего дерева из центрального репозитория – git pull;&lt;/li&gt;
&lt;li&gt;Отправка произведенных изменений локального дерева в центральный репозиторий – git push;&lt;/li&gt;
&lt;li&gt;Просмотр списка измененных файлов в текущей директории – git status;&lt;/li&gt;
&lt;li&gt;Просмотр текущих изменений – git diff;&lt;/li&gt;
&lt;li&gt;Сохранение текущих изменений – git add . (все изменения)/git add [имена файлов] (некоторые изменения);&lt;/li&gt;
&lt;li&gt;Удаление из индекса репозитория – git rm [имена файлов];&lt;/li&gt;
&lt;li&gt;Сохранение добавленных изменений – git commit –am ‘Комментарий’/git commit (внесение комментария будет через встроенный редактор);&lt;/li&gt;
&lt;li&gt;Создание новой ветки, базирующейся на текущей – git checkout –b [имя ветки];&lt;/li&gt;
&lt;li&gt;Переключение на некоторую ветку – git checkout [имя ветки];&lt;/li&gt;
&lt;li&gt;Отправка изменений конкретной ветки в центральный репозиторий – git push origin [имя ветки];&lt;/li&gt;
&lt;li&gt;Слияние ветки с текущим деревом – git merge –no-ff [имя ветки];&lt;/li&gt;
&lt;li&gt;Удаление ветки – git branch –d [имя ветки] (удаление локальной ветки, уже слитой с основным деревом)/git branch –D [имя ветки] (принудительное удаление локальной ветки)/ git push origin: [имя ветки] (удаление ветки с центрального репозитория);&lt;/li&gt;
&lt;li&gt;Проверка, на какой ветке находится пользователь – git branch;&lt;/li&gt;
&lt;li&gt;Завершение работы на ветке – git flow &amp;lt;ветка&amp;gt; finish;&lt;/li&gt;
&lt;li&gt;Инициализация структуры git-flow в репозитории – git flow init;&lt;/li&gt;
&lt;li&gt;Создание функциональной ветки – git flow feature start feature_branch;&lt;/li&gt;
&lt;li&gt;Окончание работы с функциональной веткой – git flow feature finish feature_branch;&lt;/li&gt;
&lt;li&gt;Создание ветки выпуска – git flow release start 1.0.0;&lt;/li&gt;
&lt;li&gt;Окончание работы с веткой выпуска – git flow release finish 1.0.0;&lt;/li&gt;
&lt;li&gt;Создание ветки исправления – git flow hotfix start hotfix_branch;&lt;/li&gt;
&lt;li&gt;Окончание работы с веткой исправления – git flow hotfix finish hotfix_branch.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>2-6 мая, 2022 г.</title>
      <link>https://example.com/post/2-6-%D0%BC%D0%B0%D1%8F-2022-%D0%B3/</link>
      <pubDate>Fri, 06 May 2022 22:20:00 +0000</pubDate>
      <guid>https://example.com/post/2-6-%D0%BC%D0%B0%D1%8F-2022-%D0%B3/</guid>
      <description>&lt;h2 id=&#34;обзор&#34;&gt;Обзор&lt;/h2&gt;
&lt;p&gt;2 мая было выходным днем из-за переноса праздничного дня 1 мая: в этот день отмечается Праздник Весны и Труда. С 3 мая началась обычная учебная неделя.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
